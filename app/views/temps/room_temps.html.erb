<div class="row gtr-uniform">
  <div class="col-2 col-4-mobilep ">
    <%= link_to 'Back', temps_path, class: "button icon solid fa-chevron-left"%>
  </div>
  <div class="col-10 col-8-mobilep">
    <h2>Le temperature della stanza</h2>
  </div>
  <div class="col-12 col-12-mobilep">
    <br>
  </div>

  <% if @temps.present? %>
    <div id="ls" class="col-12 col-12-mobile"><h2><b>TEMP:</b> <%= @last.temp %>&deg;C <b>alle ore: </b> <%= @last.created_at.strftime("%T")%></h2></div>
    <div class="col-12 col-12-mobile"><br></div>
    <!--<div style="width:30em">-->
    <div class="chart-container oneLineGraph">
      <canvas id="tempChart"></canvas>
    </div>
    <div class="col-12 col-12-mobile"><hr></div>
    <div class="col-8 col-12-mobile">
      <h3>Scegli il numero di dati che vuoi vedere per le medie</h3>
    </div>
    <div class="col-4 col-12-mobile">
      <select id="datanumber" onchange="updatedata(this.value)">
        <option value="7">7
        <option value="15">15
        <option value="30">30
        <option value="60">60
        <option value="100">100
      </select>
    </div>
    <div class="col-12 col-12-mobile"><br></div>
    <div class="chart-container oneLineGraph">
      <canvas id="medtempChart"></canvas>
    </div>
    <script>
        function updateTemps(){
            $.ajax({ url: 'charts.json',
                type: 'POST',
                beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                dataType: "json",
                data: { previous:tempChart.data.labels[tempChart.data.labels.length - 1]},
                success: function(data) {
                    if(!(data.temp == null && data.created_at == null)){
                        //output from the post call
                        //21.5?01:10:18?55.9
                        //0-4  5-8     14-4
                        //for temp
                        tempChart.data.labels.push(data.created_at);
                        tempChart.data.datasets[0].data.push(data.temp);

                        if(tempChart.data.labels.length >= 100) {
                            tempChart.data.labels.shift();
                            tempChart.data.datasets[0].data.shift();
                        }
                        tempChart.update();
                        $("#ls").html("<h2><b>TEMP:</b> "+data.temp+"&deg;C <b>alle ore: </b>"+data.created_at+"</h2>");
                    }
                },
                error: function(){
                    console.log("Error in update");
                }
            });
            setTimeout( updateTemps, 840000 );
            // un update ogni 14 minuti
            //setTimeout( updateTemps, 25000 );
        }
        function startUpdate(){
            //updateReal();
            setTimeout( updateTemps, 5000 );
        }
        window.addEventListener("load", startUpdate);

        let ctx = document.getElementById("tempChart").getContext("2d");

        var tempChart = new Chart(ctx, {
            type:'line',
            data: {
                labels: [<% @temps.each do |temp| %>'<%=temp.created_at.strftime("%T")%>', <% end %>],
                datasets: [{label: 'Temperatures \u00B0C',
                    data: [<% @temps.each do |temp| %><%=temp.temp%>, <% end %>],
                    fill:!1, borderColor:"#3cb371", lineTension:0.1}]
            },options:{responsive:!0,maintainAspectRatio:!1,aspectRatio:1,scales: {yAxes: [{ticks: { beginAtZero:!1}}]}}
        });

        let ctmedt = document.getElementById("medtempChart").getContext("2d");

        let medtempChart = new Chart(ctmedt, {
        type:'line',
        data:{
            labels:[<% @meds.each do |m| %>'<%=m.giorno.strftime("%d-%m-%y")%>', <% end %>],
            datasets:[{label:'Medium Temps \u00B0C',
                data:[<% @meds.each do |m| %><%=m.temp %>, <% end %>],
                fill:!1,borderColor:"#216bff",lineTension:0.1}]},
        options:{responsive:!0,maintainAspectRatio:!1,aspectRatio:1,scales:{yAxes:[{ticks:{beginAtZero:!1}}]}}
        });

        function updatedata(numberOfValues){
            $.ajax({ url: 'charts.json',
                type: 'POST',
                beforeSend: function(xhr) {xhr.setRequestHeader('X-CSRF-Token', $('meta[name="csrf-token"]').attr('content'))},
                dataType: "json",
                data: { previous:tempChart.data.labels[tempChart.data.labels.length - 1]},
                success: function(data) {
                    if(!(data.temp == null && data.created_at == null)){
                        //output from the post call
                        //21.5?01:10:18?55.9
                        //0-4  5-8     14-4
                        //for temp
                        tempChart.data.labels.push(data.created_at);
                        tempChart.data.datasets[0].data.push(data.temp);

                        if(tempChart.data.labels.length >= 100) {
                            tempChart.data.labels.shift();
                            tempChart.data.datasets[0].data.shift();
                        }
                        tempChart.update();
                        $("#ls").html("<h2><b>TEMP:</b> "+data.temp+"&deg;C <b>alle ore: </b>"+data.created_at+"</h2>");
                    }
                },
                error: function(){
                    console.log("Error in update");
                }
            });

            /*$.post('Connector', {livesearch: "getmeds", number: numberOfValues}, function(data) {
                if(data.length>15){
                    let datesN = data.search("#");
                    let dates = data.slice(0, datesN);
                    data = data.slice(datesN+1, data.length);
                    let tempsN = data.search("#");
                    let temps = data.slice(0, tempsN);
                    data = data.slice(tempsN+1, data.length);
                    let hums = data;

                    let valueNumber = medhumChart.data.labels.length;
                    let i;
                    for(i=0; i<valueNumber; i++) {
                        medtempChart.data.labels.pop();
                        medtempChart.data.datasets[0].data.pop();
                    }

                    for(i=0; i<numberOfValues; i++) {
                        let tmpN = dates.search(",");
                        let tmpDates = dates.slice(0, tmpN);
                        medtempChart.data.labels.push(tmpDates);
                        //update only once because the var with labels is the same for the 2 meds graphs
                        //so update both will result in duplicate labels for the dates
                        dates = dates.slice(tmpN+1, dates.length);

                        tmpN = temps.search(",");
                        let tmpTemps = temps.slice(0, tmpN);
                        medtempChart.data.datasets[0].data.push(tmpTemps);
                        temps = temps.slice(tmpN+1, temps.length);
                    }
                    medtempChart.update();
                }
            });*/
        }
    </script>
  <%else %>
    <div class="col-12 col-12-mobilep">
      <h3>Non c'&egrave; alcuna temperatura disponibile, attendi che il sensore ne legga qualcuna, poi torna qua</h3>
    </div>
  <% end %>
</div>